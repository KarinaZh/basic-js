const CustomError = require("../extensions/custom-error");

module.exports = class DepthCalculator {
    calculateDepth(arr) {
        let a = (Array.isArray(arr)) ? 1 + arr.reduce((max, item) => Math.max(max, this.calculateDepth(item)), 0) : 0;
        return a;
    }
};






//возникли трудности при решении данного таска в связи с рекурсией (собирала решение по кусочкам с помощью google)
//объяснение ниже - для себя, чтобы более полно понять процесс решения

/*Переменная a проверяет является ли параметр arr массивом:
 - если arr не массив, возвращает 0 и останавливается
 - если arr - массив, через reduce находит в arr максимально значение, передавая в item функцию calculateDepth(), 
   но параметр в функции теперь каждый следующий item (и переменная а снова проводит проверку на массив).
    если в проверку а попадает число - возращается 0 и item = 0,
    если в вроверку а попадает массив - reduce проверяет каждый элемент этого массива и т.д.
     когда проверены все эелементы, Math.max высчитывает максимальное значение в каждом вложенном массиве, возвращает его
      и reduce выдаёт общее значение
 +1:
  если arr - массив, но без вложенностей, reduce вернёт 0, и к нему будет прибавлена 1
  если в arr несколько вложенностей, то булет выполнена рекурсия, reduce вернет количество вложенностей, 
   к которым будет прибавлена 1 (за счет изначального (основного) массива*/